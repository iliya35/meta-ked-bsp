active_part_file=sys_active
active_part=a
bootargs_base=rootwait console=ttymxc3,115200 earlycon
bootcfg=conf-imx6ull-kontron-dl.dtb
bootcmd=run vendor_bootcmd;
bootubipart=spi-nand0
bootubivol=boot
fallback_active=0
fdt_addr_r=0x83000000
image_base=fitImage
ipaddr=192.168.1.11
kernel_addr_r=0x82000000
netargs=setenv bootargs root=/dev/nfs ip=${ipaddr}:${serverip}:::${hostname}:eth0:any: nfsroot=${serverip}:/nfsroot,v3,tcp
pxefile_addr_r=0x80100000
ramdisk_addr_r=0x88080000
scriptaddr=0x80100000
serverip=192.168.1.10
upgrade_available=0
vendor_boot_targets=mmc0 ubifs mmc1
vendor_bootcmd_mmc0= setenv devnum 0;setenv devpart 1;run vendor_boot
vendor_bootcmd_mmc1= setenv devnum 1;setenv devpart 1;run vendor_ab_boot

altbootcmd=
	setenv fallback_active 1;
	setenv bootargs_base ${bootargs_base} fallback;
	run vendor_bootcmd;

vendor_bootcmd=
	for target in ${vendor_boot_targets}; do
		run vendor_bootcmd_${target};
	done;
	reset;

vendor_bootcmd_net=
	run netargs;
	setenv bootargs ${bootargs} ${bootargs_base};
	tftp ${loadaddr} ${image_base};
	run vendor_bootm;

vendor_ab_boot=
	if ubi part ubi || ubi part UBI; then
		ubifsmount ubi0:boot;
		if ubifsload $loadaddr ${active_part_file} 2; then
			run vendor_set_ab_bootargs;
		else
			echo ------------------------ ;
			echo No partition file found. ;
			echo Aborting boot and reset! ;
			echo ------------------------ ;
			reset;
		fi;
		if ubifsload $loadaddr ${image}; then
			if test ${upgrade_available} = 1; then
				wdt dev watchdog@20bc000;
				wdt start 15000;
			fi;
			run vendor_bootm;
		else
			echo ------------------------ ;
			echo $image not found.        ;
			echo Aborting boot and reset! ;
			echo ------------------------ ;
			reset;
		fi;
	fi;

vendor_boot=
	setenv bootargs root=/dev/mmcblk${devnum}p2 ${bootargs_base};
	if load mmc ${devnum}:${devpart} ${loadaddr} ${image_base}; then
		run vendor_bootm;
	fi;

vendor_bootm=
	if test -n "${bootcfg}"; then
		bootm ${loadaddr}#${bootcfg};
	else
		bootm ${loadaddr};
	fi;

vendor_set_ab_bootargs=
	if test $fallback_active = 0; then
		echo Normal boot to active system;
		setenv image ${image_base}_active;
		if itest.b *${loadaddr} == 41; then
			setenv active_part a;
		else
			setenv active_part b;
		fi;
	else
		echo Fallback boot to inactive system;
		setenv image ${image_base}_inactive;
		if itest.w *${loadaddr} == 0x4242 || itest.w *${loadaddr} == 0x4241; then
			setenv active_part b;
		elif itest.w *${loadaddr} == 0x4141 || itest.w *${loadaddr} == 0x4142; then
			setenv active_part a;
		fi;
	fi;
	if test $active_part = a; then
		setenv bootargs ubi.mtd=0 rootfstype=ubifs root=ubi0:root_A ${bootargs_base};
		echo Using rootfs partition A: ubi0:root_A;
	elif test $active_part = b; then
		setenv bootargs ubi.mtd=0 rootfstype=ubifs root=ubi0:root_B ${bootargs_base};
		echo Using rootfs partition B: ubi0:root_B;
	fi;
