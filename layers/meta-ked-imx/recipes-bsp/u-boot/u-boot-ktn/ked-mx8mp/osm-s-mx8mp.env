active_part_file=sys_active
active_part=a
bootargs_base=rootwait
bootcfg=auto
bootcmd=fastboot usb 0;
extension_board=0
fallback_active=0
fdt_addr_r=0x48000000
fdtoverlay_addr_r=0x49000000
image_base=fitImage
ipaddr=192.168.1.11
kernel_addr_r=0x42000000
netargs=setenv bootargs root=/dev/nfs ip=${ipaddr}:${serverip}:::${hostname}:eth0:any nfsroot=${serverip}:/nfsroot,v3,tcp
pxefile_addr_r=0x40100000
ramdisk_addr_r=0x48080000
scriptaddr=0x40000000
serverip=192.168.1.10
touch_rst_gpio=7
upgrade_available=0
vendor_boot_targets=mmc1 mmc0
vendor_bootcmd_mmc0=devnum=0; devpart=1; run vendor_boot
vendor_bootcmd_mmc1=devnum=1; devpart=1; run vendor_boot

altbootcmd=
	setenv fallback_active 1;
	setenv bootargs_base ${bootargs_base} fallback;
	run vendor_bootcmd;

vendor_bootcmd=
	if test $bootcfg = 'auto'; then
		run vendor_detect_config;
	fi;
	for target in ${vendor_boot_targets}; do
		run vendor_bootcmd_${target};
	done;
	reset;

vendor_bootcmd_net=
	run netargs;
	setenv bootargs ${bootargs} ${bootargs_base};
	tftp ${loadaddr} ${image_base};
	bootm ${loadaddr}#${bootcfg};

vendor_detect_config=
	regulator dev VCC_PANEL
	regulator enable
	gpio clear ${touch_rst_gpio};
	sleep 0.02;
	gpio set ${touch_rst_gpio};
	sleep 0.02;
	i2c dev 0;
	setenv bootcfg_ext conf-freescale_imx8mp-kontron-bl-extension.dtbo;
	setenv bootcfg conf-freescale_imx8mp-kontron-bl-osm-s.dtb;
	if i2c probe 0x5d; then
		echo 'LVDS Panel detected';
		setenv bootcfg ${bootcfg}#conf-freescale_imx8mp-kontron-dl.dtbo;
	fi;
	if test ${extension_board} = 1; then
		setenv bootcfg ${bootcfg}#${bootcfg_ext};
	else
		setenv bootcfg ${bootcfg};
	fi;

vendor_ab_boot=
	if ext4load mmc ${devnum}:${devpart} ${loadaddr} ${active_part_file}; then
		run vendor_set_ab_bootargs;
	else
		echo ------------------------ ;
		echo No partition file found. ;
		echo Aborting boot and reset! ;
		echo ------------------------ ;
		reset;
	fi;
	if ext4load mmc ${devnum}:${devpart} ${loadaddr} ${image}; then
		if test ${upgrade_available} = 1; then
			wdt dev watchdog@30280000;
			wdt start 15000;
		fi;
		bootm ${loadaddr}#${bootcfg};
	else
		echo ------------------------ ;
		echo $image not found.        ;
		echo Aborting boot and reset! ;
		echo ------------------------ ;
		reset;
	fi;

vendor_boot=
	setenv bootargs root=/dev/mmcblk${devnum}p2 ${bootargs_base};
	if fatload mmc ${devnum}:${devpart} ${loadaddr} ${image_base}; then
		bootm ${loadaddr}#${bootcfg};
	fi;

vendor_set_ab_bootargs=
	if test $fallback_active = 0; then
		echo Normal boot to active system;
		setenv image ${image_base}_active;
		if itest.b *${loadaddr} == 41; then
			setenv active_part a;
		else
			setenv active_part b;
		fi;
	else
		echo Fallback boot to inactive system;
		setenv image ${image_base}_inactive;
		if itest.w *${loadaddr} == 0x4242 || itest.w *${loadaddr} == 0x4241; then
			setenv active_part b;
		elif itest.w *${loadaddr} == 0x4141 || itest.w *${loadaddr} == 0x4142; then
			setenv active_part a;
		fi;
	fi;
	if test $active_part = a; then
		setenv bootargs root=/dev/mmcblk${devnum}p2 ${bootargs_base};
		echo Using rootfs partition A: /dev/mmcblk${devnum}p2;
	elif test $active_part = b; then
		setenv bootargs root=/dev/mmcblk${devnum}p3 ${bootargs_base};
		echo Using rootfs partition B: /dev/mmcblk${devnum}p3;
	fi;
